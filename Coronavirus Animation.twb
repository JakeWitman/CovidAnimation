<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='NumberOfCases' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
        <calculation class='tableau' formula='5000.0' />
        <range granularity='100.0' max='83836.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='covid19Data' inline='true' name='federated.140c0tm1r4g1aw13n4q8d1h8xjex' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid19Data' name='textscan.1ack06402i9cvu11wc9pa1w17xmu'>
            <connection class='textscan' directory='C:/Users/Jake/Downloads' filename='covid19Data.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ack06402i9cvu11wc9pa1w17xmu' name='covid19Data.csv' table='[covid19Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='date' name='dates' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid19Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid19Data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dates</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dates]</local-name>
            <parent-name>[covid19Data.csv]</parent-name>
            <remote-alias>dates</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[covid19Data.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dates' datatype='date' name='[dates]' role='dimension' type='ordinal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <group caption='CountriesCondition' name='[CountriesCondition]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='{ FIXED [country] :MAX([cases])} &gt; [Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='MAX([cases]) &gt; 1000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.267857' group-percentage='0.196429' measure-ordering='alphabetic' measure-percentage='0.341071' parameter-percentage='0.194643' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='NumberOfCases' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
          <calculation class='tableau' formula='5000.0' />
          <range granularity='100.0' max='83836.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Coronavirus Infections By Country - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19Data' name='federated.140c0tm1r4g1aw13n4q8d1h8xjex' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='NumberOfCases' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <range granularity='100.0' max='83836.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.140c0tm1r4g1aw13n4q8d1h8xjex'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Dates' datatype='date' name='[dates]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dates]' derivation='Day-Trunc' name='[tdy:dates:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dates]' derivation='Day-Trunc' name='[tdy:dates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[CountriesCondition]' />
          <slices>
            <column>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[CountriesCondition]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[sum:cases:qk]</rows>
        <cols>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[tdy:dates:qk]</cols>
        <pages>
          <column>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[tdy:dates:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' />
      </table>
      <simple-id uuid='{BFACB05D-C08B-40D5-BAC1-013B0A1CE0CA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[none:country:nk]' type='color' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-02 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[CountriesCondition]</field>
            <field>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[Set 1]</field>
            <field>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[none:country:nk]</field>
            <field>[federated.140c0tm1r4g1aw13n4q8d1h8xjex].[yr:dates:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEA30442-AE2D-4465-B72D-6C2D296CEFB5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      qwKgVLT/D6bcZf6zPrJTAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
